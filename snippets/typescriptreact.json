{
  "👻 创建 useState": {
    "prefix": "useState",
    "body": ["const [$1, set${1/(.*)/${1:/capitalize}/}] = useState<$2>($3);$0"]
  },
  "👻 创建 useMemo": {
    "prefix": "useMemo",
    "body": ["const $1 = useMemo(() => {", "  $2", "}, [$3]);$0"]
  },
  "👻 创建 useRef": {
    "prefix": "useRef",
    "body": ["const $1 = useRef<$2>();$0"]
  },
  "👻 创建 useEffect": {
    "prefix": "useEffect",
    "body": ["useEffect(() => {", "  $1", "}, [$2]);$0"]
  },
  "👻 引入 styles": {
    "prefix": "ims",
    "body": ["import styles from './index.less';$0"]
  },
  "👻 定义 className": {
    "prefix": "class",
    "body": ["className={styles.$1}$0"]
  },
  "👻 form 验证": {
    "prefix": "fv",
    "body": ["form.validateFields().then(values => {", "  $1", "});$0"]
  },
  "👻 创建 useRequest 请求": {
    "prefix": "useRequest",
    "body": [
      "const { data: ${1:data}, loading, run: ${2:runFetch} } = useRequest(${3:api}, {",
      "  manual: true,",
      "  onSuccess: (res) => {",
      "    $4",
      "  }",
      "});$0"
    ]
  },
  "👻 table 里面的 columns": {
    "prefix": "col",
    "body": [
      "const columns: ColumnsType<${1:type}>[] = [",
      "  {",
      "    title: '${2:标题}',",
      "    dataIndex: '${3:key}'",
      "  }$0",
      "]"
    ]
  },
  "👻 useQueryParam 模板": {
    "prefix": "useQueryParam",
    "body": [
      "import { useQueryParam } from 'hooks';",
      "const { query, updateQuery } = useQueryParam<${1:IQuery}>(${2:initQuery});$0"
    ]
  },
  "👻 Ellipsis 组件": {
    "prefix": "ell",
    "body": ["<Ellipsis value={${1:''}} lineClamp={${2:1}} />$0"]
  }
}
